# generated by datamodel-codegen:
#   filename:  resp.json
#   timestamp: 2023-03-19T12:38:35+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class Doc(BaseModel):
    key: str
    type: str
    seed: List[str]
    title: str
    title_suggest: str
    title_sort: str
    edition_count: int
    edition_key: List[str]
    publish_date: List[str]
    publish_year: List[int]
    first_publish_year: int
    number_of_pages_median: Optional[int] = None
    lccn: Optional[List[str]] = None
    publish_place: Optional[List[str]] = None
    oclc: Optional[List[str]] = None
    lcc: Optional[List[str]] = None
    ddc: Optional[List[str]] = None
    isbn: List[str]
    last_modified_i: int
    ebook_count_i: int
    ebook_access: str
    has_fulltext: bool
    public_scan_b: bool
    ia: List[str]
    ia_collection: List[str]
    ia_collection_s: str
    lending_edition_s: Optional[str] = None
    lending_identifier_s: Optional[str] = None
    printdisabled_s: str
    readinglog_count: int
    want_to_read_count: int
    currently_reading_count: int
    already_read_count: int
    cover_edition_key: str
    cover_i: int
    publisher: List[str]
    language: Optional[List[str]] = None
    author_key: List[str]
    author_name: List[str]
    author_alternative_name: List[str]
    subject: Optional[List[str]] = None
    id_goodreads: Optional[List[str]] = None
    id_librarything: Optional[List[str]] = None
    ia_box_id: Optional[List[str]] = None
    publisher_facet: List[str]
    subject_facet: Optional[List[str]] = None
    field_version_: int = Field(..., alias='_version_')
    lcc_sort: Optional[str] = None
    author_facet: List[str]
    subject_key: Optional[List[str]] = None
    ddc_sort: Optional[str] = None
    ratings_count_1: Optional[int] = None
    ratings_count_2: Optional[int] = None
    ratings_count_3: Optional[int] = None
    ratings_count_4: Optional[int] = None
    ratings_count_5: Optional[int] = None
    ratings_average: Optional[float] = None
    ratings_sortable: Optional[float] = None
    ratings_count: Optional[int] = None
    first_sentence: Optional[List[str]] = None


class OpenLibraryResponse(BaseModel):
    numFound: int
    start: int
    numFoundExact: bool
    docs: List[Doc]
    num_found: int
    q: str
    offset: Any
